name: xpu-max1100
on:
  push:
    branches:
      - main

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}
jobs:
  unit-tests:
    container:
      image: intel/oneapi-basekit:2025.0.1-0-devel-ubuntu24.04
      options: --privileged -it --rm --device /dev/dri:/dev/dri -v /dev/dri/by-path:/dev/dri/by-path
        --ipc=host --cap-add=ALL
      ports:
        - 80
    runs-on:
      - self-hosted
      - intel
      - xpu
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@v4
      - name: Install prerequisite
        run: 'apt-get update

          apt-get install clinfo libaio-dev python3-pip python3.12-venv -y

          python3 -m venv ~/ds_env

          source ~/ds_env/bin/activate

          pip install torch==2.5.1 -f https://pytorch-extension.intel.com/release-whl/stable/xpu/cn/torch/

          pip install intel-extension-for-pytorch==2.5.10+xpu -f https://pytorch-extension.intel.com/release-whl/stable/xpu/cn/intel-extension-for-pytorch/

          pip install oneccl_bind_pt==2.5.0+xpu -f https://pytorch-extension.intel.com/release-whl/stable/xpu/cn/oneccl-bind-pt/

          pip install torchvision==0.20.1 -f https://pytorch-extension.intel.com/release-whl/stable/xpu/cn/torchvision/

          pip install py-cpuinfo numpy

          pip install .[dev,autotuning]

          '
        shell: bash
      - id: measurement-3
        name: Record Measurement After Install prerequisite
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Install prerequisite
          task: get-measurement
      - name: Check container state
        run: 'source ~/ds_env/bin/activate

          ldd --version

          ds_report

          python3 -c "import torch; print(''torch:'', torch.__version__, torch)"

          python3 -c "import torch; import intel_extension_for_pytorch; print(''XPU
          available:'', torch.xpu.is_available())"

          python3 -c "from deepspeed.accelerator import get_accelerator; print(''accelerator:'',
          get_accelerator()._name)"

          pip list

          '
        shell: bash
      - id: measurement-5
        name: Record Measurement After Check container state
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Check container state
          task: get-measurement
      - name: Unit tests
        run: 'source ~/ds_env/bin/activate

          cd tests/unit

          pytest --verbose accelerator/*

          pytest --verbose autotuning/*

          pytest --verbose checkpoint/test_reshape_checkpoint.py

          pytest --verbose checkpoint/test_moe_checkpoint.py

          pytest --verbose checkpoint/test_shared_weights.py

          pytest --verbose launcher/test_ds_arguments.py launcher/test_run.py

          pytest --verbose model_parallelism/*

          pytest --verbose moe/test_moe_tp.py

          pytest --verbose monitor/*

          pytest --verbose utils/*

          pytest --verbose runtime/test_ds_config_model.py

          pytest --verbose runtime/pipe/test_pipe_schedule.py

          pytest --verbose runtime/zero/test_zero_config.py

          pytest --verbose runtime/zero/test_zero_tiled.py

          pytest --verbose runtime/zero/test_zeropp.py

          pytest --verbose runtime/test_autocast.py

          pytest --verbose runtime/test_data.py

          pytest --verbose runtime/test_runtime_utils.py

          pytest --verbose runtime/activation_checkpointing/*

          pytest --verbose runtime/utils/*

          pytest --verbose runtime/zero/test_zero_dynamic_class.py

          '
        shell: bash
      - id: measurement-7
        name: Record Measurement After Unit tests
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Unit tests
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
permissions:
  contents: read
  issues: write
